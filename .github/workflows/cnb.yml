name: Build and Deploy to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Install Cloud Native Buildpacks Pack CLI
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.20.0/pack-v0.20.0-linux.tgz" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack

      - name: Build and push Go image
        if: ${{ github.event.head_commit.modified | join(' ') =~ './backend/' }}
        working-directory: ./backend
        run: |
          pack build --builder paketobuildpacks/builder:base tl-backend
          echo "${{ secrets.GHCR_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.repository_owner }} --password-stdin
          docker tag tl-backend docker.pkg.github.com/${{ github.repository }}/tl-backend:latest
          docker push docker.pkg.github.com/${{ github.repository }}/tl-backend:latest
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

      - name: Build and push ReactJS image
        if: ${{ github.event.head_commit.modified | join(' ') =~ './frontend/' }}
        working-directory: ./frontend
        run: |
          pack build --builder paketobuildpacks/builder:base tl-frontend
          echo "${{ secrets.GHCR_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.repository_owner }} --password-stdin
          docker tag tl-frontend docker.pkg.github.com/${{ github.repository }}/tl-frontend:latest
          docker push docker.pkg.github.com/${{ github.repository }}/tl-frontend:latest
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled

      - name: Clean up Docker images
        run: |
          docker image prune -f
